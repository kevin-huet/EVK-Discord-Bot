{"version":3,"sources":["../../../src/optional-listeners/error-listeners/CoreCommandAutocompleteInteractionError.ts"],"names":[],"mappings":";;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,cAAmD;AAErD,IAAM,aAAN,MAAM,mBAAkB,SAA4D;AAAA,EACnF,YAAY,SAA2B;AAC7C,UAAM,SAAS,EAAE,OAAO,OAAO,oCAAoC,CAAC;AAAA,EACrE;AAAA,EAEO,IAAI,OAAgB,SAAyC;AACnE,UAAM,EAAE,MAAM,SAAS,IAAI,QAAQ;AACnC,SAAK,UAAU,OAAO;AAAA,MACrB,2EAA2E,IAAI,cAAc,SAAS,IAAI;AAAA,MAC1G;AAAA,IACD;AAAA,EACD;AACD;AAZ2F;AAApF,IAAM,YAAN","sourcesContent":["import { Listener } from '../../lib/structures/Listener';\nimport { Events, type AutocompleteInteractionPayload } from '../../lib/types/Events';\n\nexport class CoreEvent extends Listener<typeof Events.CommandAutocompleteInteractionError> {\n\tpublic constructor(context: Listener.Context) {\n\t\tsuper(context, { event: Events.CommandAutocompleteInteractionError });\n\t}\n\n\tpublic run(error: unknown, context: AutocompleteInteractionPayload) {\n\t\tconst { name, location } = context.command;\n\t\tthis.container.logger.error(\n\t\t\t`Encountered error while handling an autocomplete run method on command \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n"]}