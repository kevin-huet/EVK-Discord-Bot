{"version":3,"sources":["../../../src/optional-listeners/application-command-registries-listeners/CoreApplicationCommandRegistriesRegistered.ts"],"names":[],"mappings":";;;;AAAA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AAGhB,IAAM,aAAN,MAAM,mBAAkB,SAA+D;AAAA,EACtF,YAAY,SAA2B;AAC7C,UAAM,SAAS,EAAE,OAAO,OAAO,wCAAwC,MAAM,KAAK,CAAC;AAAA,EACpF;AAAA,EAEO,IAAI,aAAsD,WAAmB;AACnF,SAAK,UAAU,OAAO,KAAK,sCAAsC,UAAU,eAAe,CAAC,mBAAmB;AAAA,EAC/G;AACD;AAR8F;AAAvF,IAAM,YAAN","sourcesContent":["import { Listener } from '../../lib/structures/Listener';\nimport { Events } from '../../lib/types/Events';\nimport type { ApplicationCommandRegistry } from '../../lib/utils/application-commands/ApplicationCommandRegistry';\n\nexport class CoreEvent extends Listener<typeof Events.ApplicationCommandRegistriesRegistered> {\n\tpublic constructor(context: Listener.Context) {\n\t\tsuper(context, { event: Events.ApplicationCommandRegistriesRegistered, once: true });\n\t}\n\n\tpublic run(_registries: Map<string, ApplicationCommandRegistry>, timeTaken: number) {\n\t\tthis.container.logger.info(`ApplicationCommandRegistries: Took ${timeTaken.toLocaleString()}ms to initialize.`);\n\t}\n}\n"]}